// Import the functions you need from the SDKs you need
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.10.0/firebase-app.js";
import { getDatabase, onValue, ref, update, limitToLast, query, orderByKey, set, onChildAdded } from 'https://www.gstatic.com/firebasejs/9.10.0/firebase-database.js';
const firebaseConfig = {
    apiKey: "AIzaSyDxFLdPFwjwUiI0EHwZvC0cRcEVmR0CiYs",
    authDomain: "atmosense-1645e.firebaseapp.com",
    databaseURL: "https://atmosense-1645e-default-rtdb.europe-west1.firebasedatabase.app",
    projectId: "atmosense-1645e",
    storageBucket: "atmosense-1645e.appspot.com",
    messagingSenderId: "565173512011",
    appId: "1:565173512011:web:8Animationsa7a5947fb2470f8912ace",
    measurementId: "G-FZ55WKWLZP"
};



// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getDatabase();

var latest_timestamps, time_var, temp_var, hum_var, co2_var, co_var, formaldahide_var, tvoc_var, pm10_var, pm25_var, lat, lon, counter, flag;
var Ihi_pm10, Ihi_co, Ihi_pm25, Ilo_pm10, Ilo_co, Ilo_pm25, BPhi_pm10, BPlo_pm25, BPhi_co, BPlo_co, BPhi_pm25, BPlo_pm10;
var epoch_date;
var co_avg, pm25_avg, pm10_avg, aqi_pm10, aqi_pm25, aqi_co, aqi_var, capital_aqi_var, southern_aqi_var, northern_aqi_var, counter = 0;


var concerned_element = document.getElementById("concerned_text");
var advice_element = document.getElementById("advice_text");
var advice_header = document.getElementById("advice_text_header");
var concerned_header = document.getElementById("concerned_text_header");
var aqi_header = document.getElementById("aqi_header");
var pollutant_header = document.getElementById("pollutant_header");
var icon1 = document.getElementById("icon1");
var icon2 = document.getElementById("icon2");
var temp_element = document.getElementById('temp');
var hum_element = document.getElementById('hum');
var date_time_element = document.getElementById("date_time");
var co_element = document.getElementById("co_value");
var co2_element = document.getElementById("co2_value");
var formaldahide_element = document.getElementById("formaldahide_value");
var pm25_element = document.getElementById("pm25_value");
var pm10_element = document.getElementById("pm10_value");
var tvoc_element = document.getElementById("tvoc_value");
var gov_element = document.getElementById('gov');

const concerned = ["Air quality is great!", "Some people who may be unusually sensitive to particle pollution.", "Sensitive groups include people with heart or lung disease, older adults, children and teenagers.", "Everyone"];
const advice = ["It's a great day to be active outside.", "<b>Unusually sensitive people:</b> Consider reducing prolonged or heavy exertion. Watch for symptoms such as coughing or shortness of breath. These are signs to take it easier. </br></br><b>Everyone else: </b> It's a good day to be active outside.", "<b>Sensitive groups: </b>Reduce prolonged or heavy exertion. It's OK to be active outside, but take more breaks and do less intense activities. Watch for symptoms such as coughing or shortness of breath. </br></br><b>People with asthma </b>should follow their asthma action plans and keep quick relief medicine handy. </br></br><b>If you have heart disease: </b>Symptoms such as palpitations, shortness of breath, or unusual fatigue may indicate a serious problem. If you have any of these, contact your heath care provider.", "<b>Sensitive groups:</b> Avoid prolonged or heavy exertion. Consider moving activities indoors or rescheduling. </b><b>Everyone else:</b> Reduce prolonged or heavy exertion. Take more breaks during outdoor activities.", "<b>Sensitive groups:</b> Avoid all physical activity outdoors. Move activities indoors or reschedule to a time when air quality is better. </br></br><b>Everyone else: </b>Avoid prolonged or heavy exertion. Consider moving activities indoors or rescheduling to a time when air quality is better.", "<b>Everyone:</b> Avoid all physical activity outdoors. </br></br><b>Sensitive groups:</b> Remain indoors and keep activity levels low. Make sure particle pollution indoors is low. "];
const comments = ["Good", "Moderate", "Unhealthy for sensitive groups", "Unhealthy", "Very Unhealthy", "Hazardous"];
const colors = ['#f5365c', "#A0DC65", '#FDD853', '#FE9B58', '#FF6C70', '#A87CBD', "#d10404"];
const muharraq = [[50.629623, 26.265227], [50.629002, 26.265463], [50.627711, 26.266278], [50.62746, 26.266535], [50.627078, 26.266889], [50.62672, 26.267114], [50.626397, 26.267189], [50.625895, 26.267243], [50.625704, 26.26735], [50.623852, 26.268358], [50.623481, 26.268561], [50.623195, 26.268594], [50.622657, 26.268701], [50.622083, 26.268679], [50.621939, 26.268655], [50.62114, 26.268402], [50.620049, 26.268039], [50.61957, 26.267891], [50.619214, 26.267712], [50.618876, 26.267525], [50.618451, 26.267338], [50.617864, 26.267051], [50.617365, 26.266724], [50.616977, 26.266468], [50.616641, 26.266228], [50.616396, 26.265998], [50.616139, 26.265746], [50.615983, 26.265541], [50.615848, 26.265351], [50.615662, 26.265121], [50.615533, 26.264835], [50.615411, 26.264534], [50.6153, 26.264228], [50.615202, 26.264041], [50.61508, 26.263846], [50.614925, 26.263606], [50.61473, 26.263382], [50.614469, 26.263177], [50.614224, 26.263002], [50.613947, 26.262837], [50.613571, 26.262698], [50.613321, 26.262617], [50.612625, 26.262395], [50.612039, 26.262193], [50.611535, 26.262047], [50.611131, 26.261898], [50.610599, 26.261675], [50.609973, 26.261394], [50.60968, 26.261274], [50.609387, 26.26119], [50.609018, 26.261098], [50.608618, 26.261014], [50.60787, 26.260868], [50.607265, 26.260795], [50.606779, 26.260788], [50.605634, 26.260759], [50.604484, 26.260741], [50.603313, 26.260709], [50.602241, 26.260672], [50.600809, 26.260591], [50.600348, 26.260525], [50.600011, 26.260477], [50.599381, 26.260314], [50.598549, 26.260041], [50.597837, 26.259747], [50.596666, 26.259031], [50.59598, 26.258444], [50.595551, 26.258021], [50.595049, 26.257438], [50.594713, 26.25697], [50.594469, 26.256525], [50.59423, 26.256075], [50.594098, 26.255703], [50.593972, 26.255231], [50.592988, 26.252174], [50.593128, 26.252234], [50.594351, 26.255912], [50.594493, 26.256232], [50.594659, 26.256514], [50.594826, 26.256867], [50.595153, 26.257312], [50.595465, 26.257714], [50.595799, 26.258081], [50.596283, 26.258538], [50.596717, 26.258829], [50.597352, 26.259226], [50.597911, 26.259555], [50.598335, 26.259778], [50.598602, 26.25995], [50.599078, 26.260122], [50.599454, 26.260234], [50.599905, 26.260369], [50.600297, 26.260414], [50.601576, 26.260516], [50.603311, 26.260595], [50.605508, 26.260628], [50.607692, 26.260717], [50.608815, 26.260952], [50.609784, 26.261131], [50.610969, 26.261702], [50.612355, 26.262205], [50.613952, 26.26272], [50.614557, 26.26305], [50.615019, 26.263408], [50.615218, 26.263699], [50.615518, 26.264214], [50.615755, 26.264874], [50.616055, 26.265311], [50.61623, 26.265702], [50.616554, 26.265948], [50.617103, 26.266407], [50.618327, 26.267213], [50.61955, 26.26775], [50.620973, 26.268231], [50.622078, 26.268535], [50.62229, 26.268535], [50.622427, 26.268389], [50.62249, 26.268166], [50.622415, 26.267852], [50.622215, 26.267315], [50.62174, 26.266062], [50.621478, 26.265155], [50.621403, 26.264909], [50.621503, 26.264696], [50.621717, 26.264641], [50.622575, 26.264508], [50.623538, 26.264342], [50.624131, 26.264231], [50.624316, 26.264219], [50.624424, 26.26425], [50.624622, 26.264355], [50.624961, 26.26486], [50.62509, 26.26491], [50.625232, 26.265065], [50.625246, 26.265185], [50.625223, 26.265233], [50.625162, 26.265277], [50.62509, 26.265289], [50.625012, 26.265246], [50.624931, 26.2651], [50.624897, 26.265003], [50.62485, 26.26492], [50.624744, 26.264755], [50.624532, 26.264474], [50.62445, 26.264406], [50.624371, 26.264361], [50.624276, 26.264345], [50.622556, 26.264623], [50.622031, 26.264724], [50.621924, 26.26479], [50.62183, 26.264878], [50.621799, 26.264984], [50.621787, 26.265126], [50.621838, 26.265546], [50.621964, 26.266061], [50.622411, 26.267193], [50.622621, 26.267559], [50.622775, 26.26787], [50.622856, 26.267969], [50.622932, 26.26806], [50.623051, 26.26816], [50.623204, 26.268206], [50.623351, 26.268245], [50.623501, 26.268253], [50.623732, 26.268222], [50.623922, 26.268136], [50.625262, 26.267377], [50.626602, 26.266656], [50.627513, 26.266147], [50.629622, 26.264942], [50.630656, 26.264361], [50.63102, 26.264149], [50.631174, 26.264101], [50.631274, 26.264161], [50.631322, 26.264239], [50.631319, 26.264342], [50.631294, 26.264434], [50.631207, 26.264509], [50.630994, 26.264628], [50.630753, 26.264685], [50.63061, 26.264754], [50.629979, 26.265112], [50.62967, 26.265285]];
const capital = [[50.592466, 26.250699], [50.592215, 26.250013], [50.592013, 26.249624], [50.591449, 26.248911], [50.590808, 26.24811], [50.590203, 26.247512], [50.58967, 26.246948], [50.588739, 26.245996], [50.588078, 26.245336], [50.586695, 26.244265], [50.585746, 26.243722], [50.584474, 26.242957], [50.583333, 26.242304], [50.582047, 26.241541], [50.581638, 26.24123], [50.579868, 26.240163], [50.578546, 26.239285], [50.577285, 26.23846], [50.57635, 26.237883], [50.57608, 26.237683], [50.575948, 26.237573], [50.575323, 26.237193], [50.575275, 26.237124], [50.575277, 26.23701], [50.575303, 26.236905], [50.575389, 26.236837], [50.575532, 26.23677], [50.575712, 26.236792], [50.578189, 26.238299], [50.579163, 26.238843], [50.579379, 26.238921], [50.579596, 26.238947], [50.579776, 26.238947], [50.579947, 26.238903], [50.580169, 26.238781], [50.580317, 26.238617], [50.580453, 26.238447], [50.580709, 26.238064], [50.580781, 26.237925], [50.580874, 26.237724], [50.580868, 26.237613], [50.580827, 26.237502], [50.580736, 26.237393], [50.580295, 26.237204], [50.579945, 26.237102], [50.57949, 26.236952], [50.579007, 26.236817], [50.578817, 26.23673], [50.578305, 26.2365], [50.577715, 26.236099], [50.577199, 26.235757], [50.576662, 26.235383], [50.576228, 26.235103], [50.57594, 26.2349], [50.575666, 26.234678], [50.575425, 26.234491], [50.575291, 26.234325], [50.575053, 26.234112], [50.574675, 26.23393], [50.57418, 26.233666], [50.573786, 26.233428], [50.573454, 26.233226], [50.573171, 26.233024], [50.572977, 26.232865], [50.572592, 26.232596], [50.572315, 26.232347], [50.572011, 26.232074], [50.571738, 26.231823], [50.571396, 26.231516], [50.571168, 26.231266], [50.570759, 26.230826], [50.570551, 26.230568], [50.570442, 26.230432], [50.570324, 26.230329], [50.569718, 26.230053], [50.56915, 26.229791], [50.568999, 26.229767], [50.568844, 26.229805], [50.568715, 26.229972], [50.568081, 26.230818], [50.56807, 26.230875], [50.568054, 26.230982], [50.568123, 26.23106], [50.568526, 26.231393], [50.568652, 26.23146], [50.568726, 26.231444], [50.568802, 26.231407], [50.569187, 26.230997], [50.569288, 26.230899], [50.569374, 26.230884], [50.569499, 26.230942], [50.570116, 26.231459], [50.570233, 26.231543], [50.570331, 26.231558], [50.570427, 26.231484], [50.570489, 26.231395], [50.570486, 26.231292], [50.570361, 26.231156], [50.570343, 26.231056], [50.570426, 26.230958], [50.570507, 26.23089], [50.570608, 26.230793], [50.570646, 26.230717], [50.570611, 26.230619], [50.570481, 26.230491], [50.570388, 26.230378], [50.570246, 26.230281], [50.569132, 26.229746], [50.568488, 26.229486], [50.567831, 26.229105], [50.566856, 26.228706], [50.566008, 26.228307], [50.565669, 26.228193], [50.565542, 26.227889], [50.565182, 26.227566], [50.564652, 26.227261], [50.564397, 26.227166], [50.564185, 26.227185], [50.564079, 26.227299], [50.563168, 26.22844], [50.562109, 26.229714], [50.56143, 26.230456], [50.561324, 26.23076], [50.56067, 26.234229], [50.560549, 26.235035], [50.5605, 26.23508], [50.560423, 26.235108], [50.560311, 26.235096], [50.559293, 26.235096], [50.557403, 26.235096], [50.557295, 26.235043], [50.557192, 26.234947], [50.557138, 26.234842], [50.557129, 26.234628], [50.557133, 26.23273], [50.557133, 26.232569], [50.55707, 26.232452], [50.556972, 26.232343], [50.556841, 26.232287], [50.556505, 26.232251], [50.556173, 26.232259], [50.555827, 26.232243], [50.555373, 26.232239], [50.555293, 26.232221], [50.555274, 26.232173], [50.55526, 26.232123], [50.555223, 26.232088], [50.555107, 26.232079], [50.555018, 26.232103], [50.554828, 26.232142], [50.554655, 26.232158], [50.554513, 26.23216], [50.554214, 26.232108], [50.553284, 26.232176], [50.552468, 26.232136], [50.552006, 26.232175], [50.551809, 26.232334], [50.55161, 26.232532], [50.551522, 26.233146], [50.551521, 26.234255], [50.551499, 26.234809], [50.551433, 26.235047], [50.551234, 26.235126], [50.550991, 26.235106], [50.550682, 26.234968], [50.550344, 26.234878], [50.549482, 26.234689], [50.548931, 26.23468], [50.548009, 26.234635], [50.546315, 26.234661], [50.544544, 26.23461], [50.543887, 26.234601], [50.541906, 26.234616], [50.541772, 26.234614], [50.54175, 26.234614], [50.541743, 26.234614], [50.541717, 26.234614], [50.541684, 26.234614], [50.541666, 26.234614], [50.541632, 26.234614], [50.541614, 26.234614], [50.536958, 26.234574], [50.536943, 26.234574], [50.536926, 26.234574], [50.536908, 26.234574], [50.536882, 26.234574], [50.536864, 26.234574], [50.536847, 26.234574], [50.536556, 26.234584], [50.536401, 26.234569], [50.536207, 26.234586], [50.535734, 26.234569], [50.535045, 26.234586], [50.534765, 26.234621], [50.53446, 26.234699], [50.534173, 26.234754], [50.534035, 26.234798], [50.533978, 26.234806], [50.533901, 26.234802], [50.533836, 26.23477], [50.53378, 26.234719], [50.533735, 26.234584], [50.53374, 26.234381], [50.533716, 26.233941], [50.533737, 26.233568], [50.533795, 26.233002], [50.533892, 26.232504], [50.533996, 26.232142], [50.534065, 26.231769], [50.534066, 26.231553], [50.534034, 26.231371], [50.533945, 26.231178], [50.533818, 26.23099], [50.533641, 26.230865], [50.5334, 26.230746], [50.533046, 26.230632], [50.53271, 26.230501], [50.532098, 26.230252], [50.531689, 26.230032], [50.531304, 26.22984], [50.530605, 26.229447], [50.530202, 26.229244], [50.5293, 26.228689], [50.528643, 26.228286], [50.527847, 26.227737], [50.526755, 26.226941], [50.525188, 26.225785], [50.524504, 26.225169], [50.523897, 26.224562], [50.523593, 26.22424], [50.523095, 26.223555], [50.52278, 26.223035], [50.522586, 26.222654], [50.522393, 26.222281], [50.522087, 26.221577], [50.521873, 26.22102], [50.521689, 26.220228], [50.521203, 26.217994], [50.521886, 26.219927], [50.522029, 26.220718], [50.522259, 26.221389], [50.523041, 26.222979], [50.523246, 26.223336], [50.523747, 26.224041], [50.524468, 26.22484], [50.525072, 26.225424], [50.526885, 26.226936], [50.527329, 26.227228], [50.528532, 26.227854], [50.529078, 26.228121], [50.529488, 26.228298], [50.530118, 26.228596], [50.530786, 26.228931], [50.531817, 26.229362], [50.532502, 26.229629], [50.533658, 26.229968], [50.534351, 26.230141], [50.534574, 26.230348], [50.534672, 26.23076], [50.534636, 26.230988], [50.534593, 26.231166], [50.534459, 26.231509], [50.534257, 26.232057], [50.534164, 26.232298], [50.534059, 26.232597], [50.533981, 26.232855], [50.533945, 26.233097], [50.533915, 26.23334], [50.533912, 26.233632], [50.533982, 26.233918], [50.534045, 26.234115], [50.534086, 26.234268], [50.534257, 26.234408], [50.534412, 26.234522], [50.534532, 26.234542], [50.534737, 26.234497], [50.535487, 26.23446], [50.537925, 26.234506], [50.540009, 26.234534], [50.5419, 26.234518], [50.541909, 26.234518], [50.541933, 26.234518], [50.541947, 26.234518], [50.541974, 26.234515], [50.541985, 26.234515], [50.542003, 26.234515], [50.54203, 26.234515], [50.54205, 26.234515], [50.542059, 26.234515], [50.542913, 26.234517], [50.543415, 26.234515], [50.545813, 26.234503], [50.547882, 26.234503], [50.548798, 26.234509], [50.549353, 26.234554], [50.549857, 26.234656], [50.550638, 26.234866], [50.551, 26.234911], [50.551434, 26.234917], [50.551966, 26.234917], [50.552368, 26.234955], [50.553348, 26.234936], [50.554725, 26.234917], [50.555883, 26.234962], [50.556543, 26.234936], [50.556926, 26.234943], [50.557068, 26.234892], [50.557111, 26.234815], [50.557147, 26.234637], [50.557125, 26.232764], [50.557132, 26.232561], [50.557033, 26.232395], [50.556919, 26.232319], [50.556699, 26.232268], [50.556294, 26.232249], [50.556094, 26.232244], [50.555936, 26.232231], [50.555608, 26.232235], [50.555385, 26.232239], [50.555317, 26.232211], [50.555286, 26.232183], [50.555254, 26.232139], [50.555244, 26.232102], [50.555205, 26.232089], [50.555133, 26.232089], [50.555079, 26.232102], [50.55498, 26.232115], [50.554805, 26.232141], [50.554362, 26.232144], [50.553651, 26.232168], [50.552307, 26.232158], [50.552077, 26.232197], [50.551892, 26.232305], [50.551651, 26.232609], [50.55152, 26.232854], [50.551475, 26.23505], [50.551312, 26.235099], [50.55106, 26.235099], [50.550809, 26.235049], [50.550787, 26.23504], [50.550536, 26.235], [50.550066, 26.234843], [50.550044, 26.234824], [50.549486, 26.234755], [50.543935, 26.234597], [50.543836, 26.234479], [50.543793, 26.234293], [50.543848, 26.232136], [50.543925, 26.232009], [50.544023, 26.231881], [50.544602, 26.23144], [50.544908, 26.231381], [50.548602, 26.231392], [50.555805, 26.231562], [50.558642, 26.23163], [50.560435, 26.231774], [50.561593, 26.231926], [50.562789, 26.23218], [50.564718, 26.232792], [50.566447, 26.23328], [50.567401, 26.233462], [50.568722, 26.233859], [50.569605, 26.233998], [50.570824, 26.234313], [50.571023, 26.234312], [50.571129, 26.234208], [50.571174, 26.234119], [50.571108, 26.233994], [50.57093, 26.233867], [50.570711, 26.233673], [50.570611, 26.233619], [50.570497, 26.233606], [50.570391, 26.233572], [50.570351, 26.233514], [50.570392, 26.233451], [50.570413, 26.233374], [50.570491, 26.233321], [50.570586, 26.233254], [50.570675, 26.233187], [50.570679, 26.233114], [50.57067, 26.233041], [50.570613, 26.232993], [50.570148, 26.232642], [50.569885, 26.23248], [50.569712, 26.23235], [50.569658, 26.232307], [50.569525, 26.232204], [50.569217, 26.231965], [50.568722, 26.231572], [50.568711, 26.231512], [50.568754, 26.231457], [50.5689, 26.231305], [50.569241, 26.230944], [50.569324, 26.230903], [50.569414, 26.230874], [50.569549, 26.230961], [50.569857, 26.231228], [50.570176, 26.231502], [50.570246, 26.231566], [50.57034, 26.231594], [50.570402, 26.231541], [50.570484, 26.231462], [50.570506, 26.231387], [50.570498, 26.231337], [50.570411, 26.231188], [50.57036, 26.23112], [50.570394, 26.231035], [50.570456, 26.230946], [50.570569, 26.230837], [50.570622, 26.230762], [50.570639, 26.230712], [50.570628, 26.230653], [50.57049, 26.230482], [50.570287, 26.230331], [50.570087, 26.230248], [50.569778, 26.230105], [50.569482, 26.229959], [50.569234, 26.229838], [50.569136, 26.229808], [50.56897, 26.229809], [50.568892, 26.229838], [50.568792, 26.229929], [50.568634, 26.230143], [50.568106, 26.230843], [50.568016, 26.230983], [50.567698, 26.231396], [50.567161, 26.23203], [50.566781, 26.232515], [50.566614, 26.232728], [50.566505, 26.232924], [50.566509, 26.233066], [50.566621, 26.233175], [50.566968, 26.233281], [50.56792, 26.233547], [50.568672, 26.23374], [50.569136, 26.233908], [50.569776, 26.234072], [50.57043, 26.234303], [50.571948, 26.234973], [50.572636, 26.2353], [50.573308, 26.235614], [50.574021, 26.236005], [50.574598, 26.23635], [50.575102, 26.236666], [50.575871, 26.237103], [50.57772, 26.238248], [50.581616, 26.240669], [50.583676, 26.241863], [50.585835, 26.24306], [50.587573, 26.244212], [50.588928, 26.245304], [50.589874, 26.246189], [50.590453, 26.246874], [50.590893, 26.247453], [50.59155, 26.248482], [50.592078, 26.249371], [50.592552, 26.250438], [50.570416, 26.230979], [50.57055, 26.230854], [50.570618, 26.230779], [50.570659, 26.230717], [50.570575, 26.230597], [50.570404, 26.230408], [50.570317, 26.230318], [50.569321, 26.229882], [50.56745, 26.228994], [50.566327, 26.228471], [50.565742, 26.228132], [50.570558, 26.230949], [50.570675, 26.230762], [50.570658, 26.230671], [50.570498, 26.230483], [50.570073, 26.230176], [50.569642, 26.22999], [50.569264, 26.229825], [50.553197, 26.232187], [50.552104, 26.232177], [50.551733, 26.232315], [50.551656, 26.232462], [50.551536, 26.232697], [50.551513, 26.234657], [50.551459, 26.23503], [50.551316, 26.235118], [50.550956, 26.235099], [50.550715, 26.23501], [50.549513, 26.234686], [50.548333, 26.234657], [50.544075, 26.234577], [50.543944, 26.234528], [50.543824, 26.23443], [50.543769, 26.234293], [50.543901, 26.232234], [50.543967, 26.231911], [50.544229, 26.231656], [50.544885, 26.231342], [50.546437, 26.231333], [50.570465, 26.233407], [50.570544, 26.233402], [50.570629, 26.233367], [50.570712, 26.233272], [50.570745, 26.23318], [50.570733, 26.233112], [50.569136, 26.231902], [50.568788, 26.231621], [50.568725, 26.231555], [50.568724, 26.231505], [50.568761, 26.231437], [50.568894, 26.231293], [50.569187, 26.230987], [50.569246, 26.230946], [50.569294, 26.230909], [50.569355, 26.230886], [50.569418, 26.230882], [50.569967, 26.231347], [50.570203, 26.231565], [50.570308, 26.231603], [50.570387, 26.231579], [50.570486, 26.231479], [50.570513, 26.231404], [50.570319, 26.231172], [50.570323, 26.231064], [50.570494, 26.230898], [50.570524, 26.233559], [50.570435, 26.233545], [50.570356, 26.233479], [50.570361, 26.233395], [50.570419, 26.233339], [50.570492, 26.233325], [50.570566, 26.233271], [50.570624, 26.233199], [50.570679, 26.233146], [50.570686, 26.233072], [50.570661, 26.23303], [50.570602, 26.232971], [50.570168, 26.232625], [50.569953, 26.232496], [50.569374, 26.232071], [50.568815, 26.231651], [50.568742, 26.231579], [50.56872, 26.231524], [50.568735, 26.231474], [50.568771, 26.231423], [50.569189, 26.230992], [50.569255, 26.230924], [50.569322, 26.230892], [50.569375, 26.230886], [50.569429, 26.230889], [50.570033, 26.231405], [50.570244, 26.231602], [50.570314, 26.23161], [50.570403, 26.231533], [50.570489, 26.23144], [50.570334, 26.23114], [50.570323, 26.231073], [50.570485, 26.230904]];
const southern = [[50.520808, 26.216493], [50.520579, 26.215922], [50.520158, 26.214697], [50.519117, 26.212415], [50.518195, 26.210717], [50.517001, 26.208625], [50.516577, 26.207996], [50.515541, 26.206449], [50.514006, 26.204493], [50.512514, 26.2027], [50.512167, 26.202264], [50.511726, 26.201707], [50.509926, 26.199587], [50.508587, 26.197741], [50.507873, 26.196679], [50.506464, 26.19451], [50.505719, 26.19316], [50.505135, 26.191758], [50.504401, 26.189937], [50.504217, 26.18933], [50.503908, 26.188401], [50.503564, 26.187154], [50.503135, 26.185425], [50.502867, 26.184262], [50.502716, 26.183253], [50.502565, 26.182398], [50.502401, 26.180678], [50.502293, 26.179445], [50.502213, 26.178059], [50.502188, 26.177237], [50.502175, 26.17562], [50.502244, 26.17407], [50.502467, 26.1717], [50.502748, 26.169417], [50.503073, 26.167346], [50.503294, 26.166191], [50.50412, 26.162626], [50.504448, 26.161492], [50.504988, 26.159623], [50.506049, 26.156359], [50.507302, 26.153226], [50.508056, 26.151114], [50.509183, 26.147628], [50.509641, 26.145484], [50.50995, 26.143289], [50.51008, 26.141631], [50.510123, 26.141013], [50.510142, 26.140578], [50.510137, 26.140252], [50.509993, 26.140052], [50.509884, 26.13996], [50.509751, 26.139882], [50.509548, 26.139817], [50.509374, 26.139795], [50.508989, 26.139859], [50.508954, 26.139871], [50.508899, 26.139882], [50.508602, 26.139969], [50.508287, 26.140088], [50.507979, 26.140209], [50.50768, 26.140371], [50.507191, 26.140627], [50.506844, 26.140836], [50.506509, 26.14099], [50.506181, 26.141138], [50.505646, 26.141314], [50.505272, 26.141403], [50.504556, 26.141581], [50.501229, 26.142392], [50.500444, 26.142583], [50.50012, 26.142643], [50.499937, 26.142776], [50.499933, 26.14278], [50.49993, 26.142784], [50.499927, 26.142789], [50.499923, 26.142793], [50.49992, 26.142797], [50.499917, 26.142801], [50.499914, 26.142806], [50.49991, 26.14281], [50.499907, 26.142814], [50.499903, 26.142818], [50.4999, 26.142822], [50.499896, 26.142826], [50.499892, 26.142829], [50.499888, 26.142833], [50.499884, 26.142837], [50.49988, 26.14284], [50.499876, 26.142844], [50.499872, 26.142847], [50.499867, 26.142851], [50.499863, 26.142854], [50.499859, 26.142858], [50.499854, 26.142861], [50.49985, 26.142864], [50.499846, 26.142868], [50.499841, 26.142871], [50.499836, 26.142874], [50.499832, 26.142877], [50.499827, 26.14288], [50.499822, 26.142882], [50.499818, 26.142885], [50.499813, 26.142888], [50.499808, 26.14289], [50.499803, 26.142893], [50.499798, 26.142895], [50.499793, 26.142898], [50.499788, 26.1429], [50.499783, 26.142903], [50.499778, 26.142905], [50.499772, 26.142907], [50.499767, 26.142909], [50.499762, 26.142911], [50.499757, 26.142913], [50.499752, 26.142916], [50.499746, 26.142918], [50.499741, 26.14292], [50.499736, 26.142921], [50.499731, 26.142923], [50.499725, 26.142925], [50.49972, 26.142927], [50.499715, 26.142929], [50.499709, 26.142931], [50.499704, 26.142932], [50.499698, 26.142934], [50.499693, 26.142935], [50.499687, 26.142937], [50.499682, 26.142938], [50.499676, 26.142939], [50.499671, 26.14294], [50.499665, 26.142941], [50.499659, 26.142942], [50.499654, 26.142943], [50.499648, 26.142944], [50.499643, 26.142944], [50.499637, 26.142945], [50.499631, 26.142946], [50.499626, 26.142946], [50.49962, 26.142947], [50.499614, 26.142947], [50.499609, 26.142948], [50.499603, 26.142948], [50.499597, 26.142949], [50.499591, 26.142949], [50.499586, 26.142949], [50.49958, 26.14295], [50.499574, 26.14295], [50.499569, 26.14295], [50.499563, 26.14295], [50.499557, 26.14295], [50.499551, 26.14295], [50.499546, 26.14295], [50.49954, 26.14295], [50.499534, 26.14295], [50.499529, 26.142949], [50.499523, 26.142949], [50.499517, 26.142949], [50.499512, 26.142948], [50.499506, 26.142947], [50.499501, 26.142946], [50.499495, 26.142945], [50.49949, 26.142944], [50.499484, 26.142943], [50.499479, 26.142942], [50.499473, 26.14294], [50.499468, 26.142939], [50.499462, 26.142937], [50.499457, 26.142936], [50.499451, 26.142934], [50.499446, 26.142933], [50.49944, 26.142931], [50.499435, 26.14293], [50.499429, 26.142929], [50.499424, 26.142927], [50.499417, 26.142926], [50.499412, 26.142923], [50.499407, 26.142921], [50.499402, 26.142918], [50.499397, 26.142916], [50.499392, 26.142914], [50.499387, 26.142911], [50.499382, 26.142909], [50.499377, 26.142906], [50.499207, 26.142907], [50.498758, 26.142985], [50.498116, 26.143149], [50.497275, 26.143358], [50.496557, 26.143564], [50.496002, 26.143706], [50.49523, 26.143927], [50.494842, 26.144028], [50.494295, 26.144125], [50.494018, 26.144106], [50.493604, 26.144089], [50.493333, 26.14407], [50.493209, 26.144158], [50.493105, 26.144276], [50.492923, 26.144302], [50.492727, 26.144318], [50.492621, 26.144242], [50.492567, 26.144129], [50.492563, 26.144001], [50.492607, 26.143884], [50.492714, 26.143807], [50.492852, 26.143775], [50.493022, 26.143789], [50.493209, 26.143858], [50.493386, 26.143928], [50.493399, 26.143932], [50.493607, 26.143972], [50.493616, 26.143976], [50.493937, 26.144006], [50.494114, 26.144012], [50.494133, 26.144011], [50.494407, 26.143993], [50.494421, 26.143987], [50.494784, 26.143917], [50.494798, 26.143917], [50.495283, 26.143816], [50.496323, 26.143488], [50.497994, 26.143042], [50.498694, 26.142889], [50.499007, 26.1428], [50.499177, 26.142717], [50.499275, 26.142609], [50.499343, 26.142411], [50.499417, 26.142117], [50.499386, 26.141709], [50.499241, 26.141123], [50.499108, 26.140556], [50.499017, 26.140228], [50.498905, 26.140128], [50.498827, 26.139979], [50.498804, 26.1398], [50.498848, 26.139641], [50.498871, 26.139431], [50.498761, 26.138943], [50.498629, 26.138326], [50.498377, 26.137709], [50.498058, 26.13705], [50.49785, 26.136502], [50.497683, 26.136213], [50.497606, 26.135915], [50.497485, 26.135626], [50.49749, 26.135239], [50.497468, 26.134871], [50.497489, 26.134443], [50.497411, 26.134334], [50.497344, 26.134244], [50.497333, 26.134115], [50.497434, 26.133916], [50.497501, 26.133747], [50.497635, 26.13336], [50.497757, 26.132675], [50.497804, 26.13195], [50.497738, 26.131761], [50.497716, 26.131572], [50.49784, 26.131374], [50.49802, 26.131107], [50.498177, 26.130551], [50.498401, 26.129626], [50.49839, 26.129308], [50.498324, 26.12912], [50.497718, 26.128974], [50.49699, 26.128914], [50.496692, 26.128705], [50.496395, 26.128526], [50.496197, 26.128229], [50.494913, 26.124331], [50.494584, 26.123439], [50.493923, 26.122516], [50.493792, 26.121921], [50.49386, 26.121237], [50.493862, 26.119989], [50.493929, 26.119602], [50.496122, 26.116097], [50.496321, 26.1158], [50.496289, 26.115533], [50.496455, 26.115295], [50.496786, 26.115355], [50.49715, 26.115594], [50.499335, 26.115597], [50.499666, 26.115538], [50.500096, 26.115836], [50.502536, 26.116345], [50.502857, 26.116106], [50.503807, 26.115017], [50.504619, 26.113814], [50.504692, 26.112987], [50.50429, 26.111855], [50.504151, 26.111236], [50.504, 26.111023], [50.503962, 26.110726], [50.503997, 26.110318], [50.503851, 26.109739], [50.503883, 26.109243], [50.504006, 26.108709], [50.504189, 26.10825], [50.504205, 26.108072], [50.504206, 26.108063], [50.504226, 26.107791], [50.504394, 26.10767], [50.504595, 26.107517], [50.504775, 26.107198], [50.505042, 26.106508], [50.504997, 26.106087], [50.504868, 26.10548], [50.504746, 26.105148], [50.504589, 26.105129], [50.504469, 26.104985], [50.50448, 26.104824], [50.504383, 26.10461], [50.504172, 26.104345], [50.503848, 26.104059], [50.503566, 26.103903], [50.50276, 26.103612], [50.502398, 26.103547], [50.502179, 26.103573], [50.502034, 26.103704], [50.50188, 26.103756], [50.501717, 26.103743], [50.501613, 26.10369], [50.501463, 26.103546], [50.501178, 26.103546], [50.499453, 26.103403], [50.4987, 26.103389], [50.498564, 26.103467], [50.498386, 26.10348], [50.498251, 26.10348], [50.498136, 26.103376], [50.497997, 26.10326], [50.498036, 26.103133], [50.498184, 26.102994], [50.498321, 26.102831], [50.49843, 26.102473], [50.499889, 26.098093], [50.500114, 26.097336], [50.500134, 26.097197], [50.500106, 26.09706], [50.500064, 26.096851], [50.500236, 26.09665], [50.500448, 26.096625], [50.500688, 26.096816], [50.501011, 26.096982], [50.501851, 26.097172], [50.502598, 26.097197], [50.50305, 26.097214], [50.503715, 26.097139], [50.504194, 26.097106], [50.504434, 26.097015], [50.504785, 26.096907], [50.505016, 26.096791], [50.505209, 26.096626], [50.505228, 26.096609], [50.505339, 26.096476], [50.505486, 26.096211], [50.505615, 26.095946], [50.505772, 26.095316], [50.505865, 26.094604], [50.505994, 26.094115], [50.506271, 26.093535], [50.506261, 26.093386], [50.506363, 26.093212], [50.506492, 26.093088], [50.50675, 26.093005], [50.507138, 26.092872], [50.509303, 26.091704], [50.509506, 26.091497], [50.509534, 26.09124], [50.50958, 26.088436], [50.509516, 26.086515], [50.509423, 26.086382], [50.509359, 26.086208], [50.509266, 26.08596], [50.509165, 26.085628], [50.50899, 26.08509], [50.507458, 26.082794], [50.507265, 26.08272], [50.507089, 26.082612], [50.507003, 26.082099], [50.506596, 26.081107], [50.506487, 26.080341], [50.506483, 26.079585], [50.506472, 26.079176], [50.506348, 26.078919], [50.506475, 26.078728], [50.506531, 26.078382], [50.506878, 26.077588], [50.507231, 26.074639], [50.507572, 26.072036], [50.507456, 26.071899], [50.507431, 26.071722], [50.507527, 26.071534], [50.507618, 26.071281], [50.507622, 26.068922], [50.507523, 26.068635], [50.507366, 26.068477], [50.507365, 26.068446], [50.5075, 26.068196], [50.507604, 26.067737], [50.507632, 26.063352], [50.507597, 26.063023], [50.507489, 26.062817], [50.507523, 26.06257], [50.507682, 26.062325], [50.507847, 26.061957], [50.508642, 26.058664], [50.508811, 26.058055], [50.508754, 26.058856], [50.507935, 26.062147], [50.507927, 26.062547], [50.508047, 26.062617], [50.508035, 26.062856], [50.507961, 26.062956], [50.507844, 26.063071], [50.507818, 26.067948], [50.507956, 26.068081], [50.508046, 26.068214], [50.508001, 26.068523], [50.507798, 26.068698], [50.50778, 26.07126], [50.507851, 26.071551], [50.508, 26.071649], [50.507961, 26.071897], [50.507754, 26.072327], [50.506836, 26.078471], [50.506834, 26.07871], [50.506912, 26.078934], [50.506781, 26.079198], [50.506586, 26.079447], [50.506559, 26.08037], [50.506688, 26.081188], [50.50713, 26.081965], [50.507302, 26.082253], [50.507467, 26.08233], [50.507624, 26.08233], [50.50772, 26.082458], [50.507736, 26.082638], [50.507758, 26.082915], [50.50833, 26.083828], [50.509589, 26.085894], [50.509703, 26.085985], [50.509792, 26.086042], [50.509817, 26.086271], [50.50969, 26.086408], [50.509716, 26.089946], [50.509677, 26.091125], [50.509741, 26.091364], [50.509754, 26.091376], [50.509855, 26.091501], [50.510046, 26.091581], [50.510072, 26.09173], [50.509919, 26.091867], [50.509741, 26.091912], [50.509627, 26.091912], [50.5095, 26.091924], [50.509156, 26.092038], [50.508826, 26.092118], [50.50697, 26.0931], [50.506792, 26.093282], [50.506741, 26.093442], [50.506614, 26.093579], [50.506538, 26.093613], [50.506436, 26.093716], [50.506157, 26.09403], [50.505991, 26.094533], [50.505635, 26.096622], [50.505661, 26.096827], [50.50575, 26.096907], [50.50575, 26.09709], [50.505673, 26.097204], [50.505572, 26.097227], [50.505305, 26.097284], [50.505152, 26.097181], [50.504898, 26.097158], [50.504567, 26.097204], [50.503805, 26.097295], [50.502902, 26.097375], [50.501383, 26.097215], [50.500811, 26.097215], [50.500442, 26.097421], [50.499958, 26.098044], [50.498543, 26.10274], [50.49868, 26.103155], [50.498995, 26.103303], [50.501417, 26.103325], [50.501691, 26.103304], [50.501913, 26.103199], [50.502147, 26.103389], [50.502616, 26.10341], [50.503436, 26.103688], [50.504112, 26.104101], [50.504926, 26.104816], [50.505023, 26.105044], [50.505038, 26.105516], [50.505072, 26.106601], [50.504848, 26.107303], [50.504573, 26.107808], [50.504674, 26.108034], [50.504515, 26.108213], [50.504323, 26.108411], [50.504041, 26.108983], [50.503987, 26.109538], [50.504123, 26.110515], [50.504348, 26.11072], [50.504492, 26.110946], [50.504502, 26.111233], [50.504577, 26.111703], [50.504731, 26.113076], [50.504616, 26.113969], [50.504095, 26.114911], [50.502968, 26.116484], [50.502958, 26.116717], [50.502777, 26.116933], [50.502544, 26.11669], [50.502148, 26.116528], [50.50062, 26.115976], [50.499793, 26.115846], [50.499631, 26.115959], [50.499415, 26.116055], [50.499109, 26.115828], [50.497311, 26.115664], [50.496932, 26.115873], [50.49641, 26.11605], [50.495942, 26.116518], [50.494732, 26.118309], [50.493957, 26.119481], [50.493704, 26.119933], [50.493775, 26.120514], [50.493827, 26.12171], [50.493861, 26.122388], [50.494543, 26.12352], [50.495241, 26.125088], [50.49567, 26.126381], [50.496394, 26.128509], [50.497545, 26.128947], [50.498085, 26.128932], [50.498589, 26.128901], [50.498774, 26.128971], [50.498854, 26.12906], [50.498834, 26.129265], [50.498773, 26.129381], [50.498662, 26.12948], [50.498552, 26.129739], [50.498452, 26.129944], [50.498321, 26.130453], [50.498261, 26.130845], [50.498169, 26.131354], [50.498238, 26.131541], [50.498287, 26.131657], [50.498217, 26.131809], [50.498095, 26.131961], [50.497994, 26.132211], [50.497862, 26.132748], [50.497786, 26.133294], [50.497696, 26.133616], [50.497746, 26.133919], [50.497886, 26.134062], [50.497885, 26.134232], [50.497775, 26.134384], [50.497705, 26.134482], [50.497585, 26.134902], [50.497596, 26.135116], [50.497683, 26.135429], [50.497889, 26.136277], [50.498205, 26.137037], [50.498562, 26.137655], [50.49872, 26.137996], [50.498837, 26.138498], [50.499016, 26.139336], [50.499125, 26.139542], [50.499254, 26.139668], [50.499363, 26.139802], [50.499323, 26.139972], [50.499295, 26.140195], [50.499307, 26.140542], [50.499447, 26.14122], [50.499497, 26.141613], [50.499606, 26.142033], [50.499706, 26.142223], [50.499953, 26.142509], [50.499986, 26.142722], [50.499884, 26.142829], [50.499751, 26.142918], [50.499622, 26.142947], [50.499435, 26.142919], [50.499275, 26.142869], [50.499099, 26.142891], [50.498906, 26.142944], [50.496342, 26.143621], [50.495582, 26.143835], [50.494965, 26.144031], [50.494439, 26.144104], [50.4942, 26.144121], [50.493889, 26.144106], [50.493587, 26.144086], [50.493354, 26.144057], [50.493177, 26.144123], [50.493066, 26.144245], [50.493055, 26.144256], [50.492949, 26.144309], [50.49282, 26.14429], [50.492701, 26.144249], [50.49264, 26.144162], [50.492613, 26.144074], [50.492621, 26.143966], [50.49268, 26.143849], [50.492794, 26.143795], [50.492934, 26.143787], [50.493134, 26.143837], [50.493313, 26.143892], [50.493448, 26.143945], [50.493716, 26.143981], [50.493883, 26.144], [50.493887, 26.144], [50.494096, 26.144005], [50.494306, 26.144004], [50.49432, 26.144004], [50.494612, 26.143964], [50.495, 26.143878], [50.495844, 26.143638], [50.497545, 26.143163], [50.498501, 26.142917], [50.49897, 26.142793], [50.499221, 26.142696], [50.499308, 26.142565], [50.499368, 26.142447], [50.499383, 26.142432], [50.499494, 26.142367], [50.499625, 26.142319], [50.499634, 26.142319], [50.499847, 26.14233], [50.50004, 26.14241], [50.500187, 26.142448], [50.5004, 26.142453], [50.50055, 26.142436], [50.500767, 26.142381], [50.501197, 26.142278], [50.504465, 26.141473], [50.50526, 26.141277], [50.505614, 26.141194], [50.506161, 26.141018], [50.506471, 26.140889], [50.506777, 26.140734], [50.507143, 26.140525], [50.50763, 26.140251], [50.507937, 26.140083], [50.508261, 26.13995], [50.508574, 26.139835], [50.50885, 26.139761], [50.509117, 26.139687], [50.50935, 26.139628], [50.50936, 26.139629], [50.509672, 26.139572], [50.509735, 26.139551], [50.50979, 26.139519], [50.509837, 26.139479], [50.509921, 26.139414], [50.510023, 26.13934], [50.510131, 26.139256], [50.51027, 26.139196], [50.5104, 26.139146], [50.510546, 26.139126], [50.510734, 26.139123], [50.510955, 26.139159], [50.511093, 26.139213], [50.511255, 26.139313], [50.511359, 26.139443], [50.511401, 26.139599], [50.511403, 26.139722], [50.511365, 26.139846], [50.511319, 26.139934], [50.511194, 26.140145], [50.511112, 26.14035], [50.511074, 26.140599], [50.511038, 26.141009], [50.510996, 26.141313], [50.510968, 26.14164], [50.510875, 26.142228], [50.510786, 26.142794], [50.510617, 26.14359], [50.51047, 26.14423], [50.510155, 26.145405], [50.509867, 26.146408], [50.509709, 26.146923], [50.50927, 26.148054], [50.508567, 26.150325], [50.507423, 26.153512], [50.506596, 26.155662], [50.505676, 26.158097], [50.504617, 26.16156], [50.503918, 26.164233], [50.503261, 26.167468], [50.502944, 26.169647], [50.502769, 26.171236], [50.502535, 26.173208], [50.502421, 26.174915], [50.502407, 26.176522], [50.5024, 26.178215], [50.5026, 26.180789], [50.502945, 26.182823], [50.503213, 26.184798], [50.503904, 26.187428], [50.505097, 26.191053], [50.505828, 26.192991], [50.509632, 26.19886], [50.510013, 26.199256], [50.510196, 26.199476], [50.51109, 26.200598], [50.511464, 26.201053], [50.5149, 26.205171], [50.516067, 26.206822], [50.516419, 26.207387], [50.517463, 26.208986], [50.518558, 26.210786], [50.519403, 26.212495], [50.519898, 26.213599], [50.520529, 26.21503], [50.520989, 26.216324], [50.521377, 26.217654], [50.507731, 26.082834], [50.507814, 26.082999], [50.508589, 26.084309], [50.509595, 26.08585], [50.509715, 26.085941], [50.509862, 26.086065], [50.509816, 26.086223], [50.509779, 26.08643], [50.509696, 26.087754], [50.509682, 26.091175], [50.509765, 26.091358], [50.509912, 26.091457], [50.510014, 26.091557], [50.510051, 26.091764], [50.509968, 26.091863], [50.509829, 26.091938], [50.509534, 26.091929], [50.509257, 26.091954], [50.50863, 26.092145], [50.506988, 26.093053], [50.506794, 26.093235], [50.506803, 26.093384], [50.506775, 26.093509], [50.506637, 26.093608], [50.506452, 26.093683], [50.506277, 26.093799], [50.50612, 26.094097], [50.505963, 26.094611], [50.505668, 26.096491], [50.505659, 26.09669], [50.505788, 26.096864], [50.505816, 26.097013], [50.505714, 26.097154], [50.505594, 26.097237], [50.505474, 26.097245], [50.505345, 26.097228], [50.505124, 26.097162], [50.504939, 26.097129], [50.504349, 26.09717], [50.503371, 26.097336], [50.5029, 26.097352], [50.501993, 26.097286], [50.501236, 26.09717], [50.500756, 26.097286], [50.500378, 26.09746], [50.504827, 26.113138], [50.504527, 26.11403], [50.503796, 26.115485], [50.503066, 26.116228], [50.502966, 26.116614], [50.502535, 26.116881], [50.50237, 26.116613], [50.500715, 26.115926], [50.499656, 26.115776], [50.499292, 26.115954], [50.499093, 26.115864], [50.496974, 26.115653], [50.496576, 26.115801], [50.496278, 26.116068], [50.495979, 26.116335], [50.49558, 26.117197], [50.494285, 26.118919], [50.493819, 26.11981], [50.493682, 26.12201], [50.494672, 26.123647], [50.4951, 26.124897], [50.496088, 26.127783], [50.496285, 26.128378], [50.496649, 26.128676], [50.497841, 26.128975], [50.498768, 26.128887], [50.50886, 26.058592]];
const northern = [[50.508819, 26.057747], [50.508852, 26.057344], [50.508872, 26.057153], [50.50886, 26.057001], [50.50874, 26.056842], [50.50872, 26.05678], [50.508736, 26.05671], [50.508786, 26.056648], [50.508858, 26.056604], [50.508895, 26.05654], [50.5089, 26.056438], [50.508889, 26.055982], [50.508939, 26.055689], [50.508981, 26.055385], [50.509036, 26.055113], [50.509092, 26.054909], [50.509185, 26.054724], [50.509308, 26.054528], [50.509475, 26.05434], [50.509617, 26.054215], [50.50979, 26.054049], [50.509972, 26.0539], [50.510032, 26.05383], [50.51006, 26.053745], [50.510037, 26.053651], [50.509959, 26.053548], [50.509856, 26.05343], [50.509766, 26.0533], [50.509718, 26.053192], [50.509692, 26.053079], [50.509709, 26.05222], [50.509711, 26.05118], [50.509706, 26.051034], [50.509704, 26.050878], [50.509723, 26.050727], [50.509759, 26.050629], [50.509797, 26.050512], [50.509866, 26.050435], [50.510111, 26.050166], [50.510497, 26.049833], [50.510564, 26.049764], [50.510589, 26.049702], [50.510588, 26.049643], [50.510623, 26.049588], [50.51069, 26.049555], [50.510741, 26.049563], [50.510787, 26.049546], [50.510832, 26.049525], [50.511218, 26.049142], [50.511795, 26.048655], [50.512044, 26.048454], [50.512124, 26.048383], [50.512191, 26.048333], [50.512256, 26.048286], [50.512337, 26.048245], [50.512402, 26.048215], [50.512479, 26.048188], [50.512591, 26.048166], [50.51272, 26.048147], [50.512838, 26.048141], [50.512918, 26.048136], [50.512959, 26.048167], [50.512967, 26.048242], [50.512959, 26.04868], [50.512946, 26.048714], [50.512893, 26.048726], [50.512492, 26.048733], [50.508736, 26.056834], [50.508724, 26.05673], [50.512415, 26.048762], [50.511886, 26.048765], [50.51178, 26.048778], [50.511687, 26.048826], [50.511514, 26.048975], [50.510975, 26.04944], [50.510856, 26.049545], [50.510806, 26.04963], [50.510796, 26.049705], [50.510753, 26.049754], [50.510688, 26.049775], [50.510623, 26.049797], [50.510274, 26.05008], [50.510019, 26.050331], [50.509925, 26.05043], [50.509833, 26.050572], [50.509783, 26.050698], [50.509759, 26.050869], [50.50974, 26.05295], [50.509732, 26.053062], [50.509748, 26.053174], [50.509786, 26.053263], [50.509865, 26.053371], [50.510057, 26.053591], [50.510142, 26.053616], [50.510232, 26.053591], [50.510337, 26.053591], [50.510386, 26.053678], [50.51038, 26.053747], [50.510335, 26.053823], [50.510301, 26.053855], [50.510235, 26.05388], [50.510166, 26.053871], [50.510079, 26.053917], [50.509842, 26.054164], [50.509291, 26.054723], [50.509156, 26.054901], [50.509074, 26.055088], [50.509001, 26.055466], [50.509006, 26.055787], [50.50903, 26.056458], [50.509072, 26.056642], [50.509104, 26.056758], [50.509071, 26.056899], [50.509005, 26.056994], [50.508873, 26.058053], [50.508725, 26.056735], [50.508784, 26.056683], [50.508912, 26.056608], [50.512435, 26.048739], [50.512152, 26.048748], [50.511966, 26.048755], [50.511823, 26.048761], [50.511752, 26.048782], [50.511644, 26.048857], [50.51088, 26.049515], [50.51083, 26.049579], [50.510805, 26.049644], [50.510794, 26.0497], [50.510751, 26.049736], [50.510692, 26.049781], [50.510615, 26.049794], [50.510517, 26.049858], [50.509982, 26.050343], [50.509903, 26.050441], [50.509846, 26.050528], [50.509798, 26.050616], [50.509771, 26.050732], [50.509748, 26.05084], [50.509737, 26.051227], [50.509743, 26.052438], [50.50974, 26.052989], [50.509749, 26.053114], [50.509769, 26.0532], [50.509799, 26.053283], [50.509843, 26.053358], [50.509907, 26.053438], [50.509996, 26.053501], [50.510077, 26.053574], [50.510168, 26.053593], [50.510249, 26.053568], [50.51033, 26.053602], [50.510381, 26.053677], [50.51038, 26.053758], [50.510332, 26.05383], [50.510248, 26.053866], [50.51015, 26.053893], [50.510061, 26.053977], [50.509706, 26.054385], [50.509391, 26.054787], [50.50915, 26.055186], [50.509075, 26.055457], [50.509005, 26.056202], [50.509, 26.056384], [50.509, 26.056556], [50.509034, 26.056615], [50.508957, 26.057026], [50.508958, 26.057678], [50.508944, 26.058077]];



function find_governerate(lat, lon) {
    for (let i = 0; i < muharraq.length; i++) {
        if (lat == muharraq[i][0] && lon == muharraq[i][1])
            return "Muharraq";

    }

    for (let i = 0; i < capital.length; i++) {
        if (lat == capital[i][0] && lon == capital[i][1])
            return "Capital";

    }
    for (let i = 0; i < northern.length; i++) {
        if (lat == northern[i][0] && lon == northern[i][1])
            return "Northern";

    }
    for (let i = 0; i < southern.length; i++) {
        if (lat == southern[i][0] && lon == southern[i][1])
            return "Southern";

    }
    return "Error";
}

function advice_update() {
    if (aqi_var < 1 || aqi_var > 500) {

        concerned_element.innerHTML = "Error in data";
        advice_element.innerHTML = "Please use other resources.";

        document.getElementById("aqi_value_text").innerHTML = "-";
        document.getElementById("comment").innerHTML = "";
        $('#aqi_value').css({ 'background': '#f5365c ' });
        advice_header.style.color = colors[0];
        concerned_header.style.color = colors[0];
        aqi_header.style.color = colors[0];
        pollutant_header.style.color = colors[0];
        icon1.style.color = colors[0];
        icon2.style.color = colors[0];

    }
    else if (aqi_var >= 1 & aqi_var < 51) {
        concerned_element.innerHTML = concerned[0];
        advice_element.innerHTML = advice[0];
        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[0];

        $('#aqi_value').css({ 'background': '#A0DC65' });
        advice_header.style.color = colors[1];
        concerned_header.style.color = colors[1];
        aqi_header.style.color = colors[1];
        pollutant_header.style.color = colors[1];
        icon1.style.color = colors[1];
        icon2.style.color = colors[1];

    }
    else if (aqi_var < 101) {
        concerned_element.innerHTML = concerned[1];
        advice_element.innerHTML = advice[1];

        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[1];

        $('#aqi_value').css({ 'background': '#FDD853' });
        advice_header.style.color = colors[2];
        concerned_header.style.color = colors[2];
        aqi_header.style.color = colors[2];
        pollutant_header.style.color = colors[2];
        icon1.style.color = colors[2];
        icon2.style.color = colors[2];

    }
    else if (aqi_var < 151) {
        concerned_element.innerHTML = concerned[2];
        advice_element.innerHTML = advice[2];

        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[2];

        $('#aqi_value').css({ 'background': '#FE9B58' });
        advice_header.style.color = colors[3];
        concerned_header.style.color = colors[3];
        aqi_header.style.color = colors[3];
        pollutant_header.style.color = colors[3];
        icon1.style.color = colors[3];
        icon2.style.color = colors[3];

    }
    else if (aqi_var < 201) {
        concerned_element.innerHTML = concerned[3];
        advice_element.innerHTML = advice[3];

        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[3];

        $('#aqi_value').css({ 'background': '#FF6C70' });
        advice_header.style.color = colors[4];
        concerned_header.style.color = colors[4];
        aqi_header.style.color = colors[4];
        pollutant_header.style.color = colors[4];
        icon1.style.color = colors[4];
        icon2.style.color = colors[4];

    }
    else if (aqi_var < 301) {
        concerned_element.innerHTML = concerned[3];
        advice_element.innerHTML = advice[4];

        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[4];

        $('#aqi_value').css({ 'background': '#A87CBD' });
        advice_header.style.color = colors[5];
        concerned_header.style.color = colors[5];
        aqi_header.style.color = colors[5];
        pollutant_header.style.color = colors[5];
        icon1.style.color = colors[5];
        icon2.style.color = colors[5];

    }
    else if (aqi_var < 501) {
        concerned_element.innerHTML = concerned[3];
        advice_element.innerHTML = advice[5];

        document.getElementById("aqi_value_text").innerHTML = Math.round(aqi_var);
        document.getElementById("comment").innerHTML = comments[5];

        $('#aqi_value').css({ 'background': '#d10404 ' });
        advice_header.style.color = "#d10404 ";
        concerned_header.style.color = "#d10404 ";
        aqi_header.style.color = "#d10404 ";
        pollutant_header.style.color = "#d10404 ";
        icon1.style.color = "#d10404 ";
        icon2.style.color = "#d10404 ";
    }

}

function pm10_values(pm10_var) {
    if (pm10_var > 0 && pm10_var < 55) { BPhi_pm10 = 54; BPlo_pm10 = 0; Ihi_pm10 = 50; Ilo_pm10 = 0; }
    else if (pm10_var < 155) { BPhi_pm10 = 154; BPlo_pm10 = 55; Ihi_pm10 = 100; Ilo_pm10 = 51; }
    else if (pm10_var < 255) { BPhi_pm10 = 254; BPlo_pm10 = 155; Ihi_pm10 = 150; Ilo_pm10 = 101; }
    else if (pm10_var < 355) { BPhi_pm10 = 354; BPlo_pm10 = 255; Ihi_pm10 = 200; Ilo_pm10 = 151; }
    else if (pm10_var < 425) { BPhi_pm10 = 424; BPlo_pm10 = 355; Ihi_pm10 = 300; Ilo_pm10 = 201; }
    else if (pm10_var < 505) { BPhi_pm10 = 504; BPlo_pm10 = 425; Ihi_pm10 = 400; Ilo_pm10 = 301; }
    else { BPhi_pm10 = 604; BPlo_pm10 = 505; Ihi_pm10 = 500; Ilo_pm10 = 401; }
}
function pm25_values(pm25_var) {
    if (pm25_var > 0 && pm25_var < 12.1) { BPhi_pm25 = 12; BPlo_pm25 = 0; Ihi_pm25 = 50; Ilo_pm25 = 0; }
    else if (pm25_var < 35.5) { BPhi_pm25 = 35.4; BPlo_pm25 = 12.1; Ihi_pm25 = 100; Ilo_pm25 = 51; }
    else if (pm25_var < 55.5) { BPhi_pm25 = 55.4; BPlo_pm25 = 35.5; Ihi_pm25 = 150; Ilo_pm25 = 101; }
    else if (pm25_var < 150.5) { BPhi_pm25 = 150.4; BPlo_pm25 = 55.5; Ihi_pm25 = 200; Ilo_pm25 = 151; }
    else if (pm25_var < 250.5) { BPhi_pm25 = 250.4; BPlo_pm25 = 150.5; Ihi_pm25 = 300; Ilo_pm25 = 201; }
    else if (pm25_var < 350.5) { BPhi_pm25 = 350.4; BPlo_pm25 = 250.5; Ihi_pm25 = 400; Ilo_pm25 = 301; }
    else { BPhi_pm25 = 500.4; BPlo_pm25 = 350.5; Ihi_pm25 = 500; Ilo_pm25 = 401; }
}
function co_values(co_var) {
    if (co_var > 0 && co_var < 4.5) { BPhi_co = 4.4; BPlo_co = 0; Ihi_co = 50; Ilo_co = 0; }
    else if (co_var < 9.5) { BPhi_co = 9.4; BPlo_co = 4.5; Ihi_co = 100; Ilo_co = 51; }
    else if (co_var < 12.5) { BPhi_co = 12.4; BPlo_co = 9.5; Ihi_co = 150; Ilo_co = 101; }
    else if (co_var < 15.5) { BPhi_co = 15.4; BPlo_co = 12.5; Ihi_co = 200; Ilo_co = 151; }
    else if (co_var < 30.5) { BPhi_co = 30.4; BPlo_co = 15.5; Ihi_co = 300; Ilo_co = 201; }
    else if (co_var < 40.5) { BPhi_co = 40.4; BPlo_co = 30.5; Ihi_co = 400; Ilo_co = 301; }
    else { BPhi_co = 50.4; BPlo_co = 40.5; Ihi_co = 500; Ilo_co = 401; }
}

function calculate_flag(endDate, startDate) {
    const msInDay = 24 * 60 * 60;
    var days = Math.round(Math.abs(endDate - startDate) / msInDay);

    if (days > 0) return true;
    else return false;
}

const new_ref = query(ref(db, 'air_parameters/temp_values'), orderByKey(), limitToLast(2)); // get latest node in temp_values

onValue(new_ref, (data) => {
    var jsonData = data.toJSON();
    time_var = Object.keys(jsonData)[1].toString();
    
    latest_timestamps = Object.keys(jsonData); // two latest epoch timestamps    
    flag = (calculate_flag(latest_timestamps[0], latest_timestamps[1]));

    temp_var = jsonData[time_var]['temp'];
    hum_var = jsonData[time_var]['hum'];
    co_var = jsonData[time_var]['co'];
    co2_var = jsonData[time_var]['co2'];
    formaldahide_var = jsonData[time_var]['formaldahide'];
    tvoc_var = jsonData[time_var]['tvoc'];
    pm10_var = jsonData[time_var]['pm10'];
    pm25_var = jsonData[time_var]['pm25'];
    counter = jsonData[time_var]['counter'];
    lat = jsonData[time_var]['lat'];
    lon = jsonData[time_var]['lon'];


    var current_governerate = find_governerate(lat, lon);
    if (current_governerate != "Error") {
        const sort_values = ref(db, 'air_parameters/' + current_governerate + '/values/' + time_var);
        set(sort_values,
            {
                co: [co_var][0],
                co2: [co2_var][0],
                hum: [hum_var][0],
                temp: [temp_var][0],
                formaldahide: [formaldahide_var][0],
                pm10: [pm10_var][0],
                pm25: [pm25_var][0],
                tvoc: [tvoc_var][0],
                counter: [counter][0],
                lat: [lat][0],
                lon: [lon][0],
            });
    }


    var d = new Date(0);
    d.setUTCSeconds(time_var);
    [epoch_date] = d.toISOString().split('T');
    var options = { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric', hour: "numeric", minute: "numeric", seconds: "numeric" };


    // this data represents the last node which is where the bus was last. 
    temp_element.innerHTML = temp_var + "°C";
    hum_element.innerHTML = hum_var + "%";
    date_time_element.innerHTML = d.toLocaleString("en-GB", options);
    co_element.innerHTML = co_var + "<span class='unit'>ppm</span>";
    co2_element.innerHTML = co2_var + '<span class="unit">ppm</span>';
    formaldahide_element.innerHTML = formaldahide_var + '<span class="unit">µg/m³</span>';
    pm25_element.innerHTML = pm25_var + '<span class="unit">µg/m³</span>';
    pm10_element.innerHTML = pm10_var + '<span class="unit">µg/m³</span>';
    tvoc_element.innerHTML = tvoc_var + '<span class="unit">µg/m³</span>';
    gov_element.innerHTML = current_governerate;

    // calculating aqis and adding data based on governerate should start here. 
    co_values(co_var);
    pm10_values(pm10_var);
    pm25_values(pm25_var);
    flag = 1;
    if (flag) {
        var node_keys;
        if (current_governerate != "Error") {
            const get_values_ref = query(ref(db, 'air_parameters/' + current_governerate + '/values'), orderByKey(), limitToLast(counter));

            onValue(get_values_ref, (data) => { //to retrive values
                if (flag) { //in 24 hour
                    var jsonAvgData = data.toJSON();
                    var pm10_sum = 0, pm25_sum = 0, co_sum = 0;

                    node_keys = Object.keys(jsonAvgData);
                    for (var key of node_keys) {
                        var string_key = key.toString();
                        pm10_sum += jsonAvgData[string_key]['pm10'];
                        pm25_sum += jsonAvgData[string_key]['pm25'];
                        co_sum += jsonAvgData[string_key]['co'];

                    }

                    co_avg = co_sum / counter;
                    pm10_avg = pm10_sum / counter;
                    pm25_avg = pm25_sum / counter;

                    aqi_pm10 = ((Ihi_pm10 - Ilo_pm10) / (BPhi_pm10 - BPlo_pm10)) * (pm10_avg - BPlo_pm10) + Ilo_pm10;
                    aqi_pm25 = ((Ihi_pm25 - Ilo_pm25) / (BPhi_pm25 - BPlo_pm25)) * (pm25_avg - BPlo_pm25) + Ilo_pm25;
                    aqi_co = ((Ihi_co - Ilo_co) / (BPhi_co - BPlo_co)) * (co_avg - BPlo_co) + Ilo_co;
                    aqi_var = Math.max(aqi_co, aqi_pm10, aqi_pm25);

                    if (current_governerate != "Error") {
                        const aqi_set_ref = ref(db, 'air_parameters/' + current_governerate + "/aqis/");
                        set(aqi_set_ref,
                            {

                                [epoch_date]: {
                                    "aqi": aqi_var.valueOf(),
                                    "co_aqi": aqi_co.valueOf(),
                                    "pm10_aqi": aqi_pm10.valueOf(),
                                    "pm25_aqi": aqi_pm25.valueOf()
                                }
                            }
                        );
                    

                    // counter = 1;
                    console.log(current_governerate);
                    
                        const ref_string = 'air_parameters/' + current_governerate + "/values/" + time_var;
                        const counter_query_ref = ref(db, ref_string);
                        update(counter_query_ref, { 'counter': 1 });
                    }


                }
            });
        }
        else {

            var key_2nd_last_node = latest_timestamps[0].toString();
            var last_counter_2 = jsonData[key_2nd_last_node]['counter'];
            if (current_governerate != "Error") {
                if (counter != (last_counter_2 + 1)) {
                    counter = last_counter_2 + 1;

                    const ref_string = 'air_parameters/' + current_governerate + "/values/" + time_var;

                    const counter_query_ref = ref(db, ref_string);
                    update(counter_query_ref, { 'counter': counter.valueOf() });
                }
            }
            else {
                counter = counter;
            }



        }
    }

    const aqi_query_ref = ref(db, 'air_parameters/');
    onValue(aqi_query_ref, (data) => { //to retrive values
        var jsonAQIData = data.toJSON();
        co_avg = jsonAQIData[current_governerate]['aqis'][epoch_date]['co_aqi'];
        pm10_avg = jsonAQIData[current_governerate]['aqis'][epoch_date]['pm10_aqi'];
        pm25_avg = jsonAQIData[current_governerate]['aqis'][epoch_date]['pm25_aqi'];
        aqi_var = jsonAQIData[current_governerate]['aqis'][epoch_date]['aqi'];
        capital_aqi_var = jsonAQIData[current_governerate]['aqis'][epoch_date]['aqi'];
        southern_aqi_var = jsonAQIData[current_governerate]['aqis'][epoch_date]['aqi'];
        northern_aqi_var = jsonAQIData[current_governerate]['aqis'][epoch_date]['aqi'];

        var aqi_val_element = document.getElementById("aqi_val");
        var average_aqis = (aqi_var + capital_aqi_var + southern_aqi_var + northern_aqi_var) / 4;
        aqi_val_element.innerHTML = Math.round(average_aqis);

        var pollutant_array = ["CO", "PM10", "PM2.5"];
        var pollutant_values = [co_avg.valueOf(), pm10_avg.valueOf(), pm25_avg.valueOf()];
        var prim_poll = document.getElementById("primary_pollutant");
        var maximum = Math.max.apply(Math, pollutant_values);
        if (aqi_var < 1 || aqi_var > 500) {
            prim_poll.innerHTML = "Error";
        }
        else {
            var maxIndex = pollutant_values.indexOf(maximum);
            var primary_pollutant = pollutant_array[maxIndex];
            prim_poll.innerHTML = primary_pollutant;
        }

        advice_update();



    });




});

export { app, firebaseConfig };